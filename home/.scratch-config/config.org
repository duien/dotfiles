#+auto_tangle: t

* Table of Contents                                         :TOC_3:noexport:
- [[#emacs-configuration][Emacs Configuration]]
  - [[#planning-out-a-keymap][Planning out a keymap]]
    - [[#in-the-main-normal-mode-layout][In the main normal-mode layout]]
- [[#configuring-the-configuration][Configuring the Configuration]]
  - [[#early-initialization][Early Initialization]]
  - [[#initialization][Initialization]]
  - [[#configuration][Configuration]]
    - [[#general][General]]
    - [[#evil][Evil]]
    - [[#completion][Completion]]
- [[#making-a-modeline][Making a modeline]]
- [[#yaks][YAKS!!]]
  - [[#key-command-for-pop-mark][Key command for pop-mark]]
  - [[#config-org][Config org]]
  - [[#working-with-bookmarks-and-marks][Working with bookmarks (and marks)]]
  - [[#modeline-like-moody-but-with-left-segment-colored-by-state][Modeline like moody but with left segment colored by state]]

* Emacs Configuration
I need to decide how I want to organize my config, both whether to make it literate and what the actual file layout should be. The ~header-properties~ discovery could be very handy here. 

** Planning out a keymap

*** In the main normal-mode layout

| k | meaning |
|---+---------|
| f | file    |
| w | window  |
| b | buffer  |
| q | quit    |
| h | help    |
|   |         |

* Configuring the Configuration
I think we're gonna go literate, but I also want to go with a config that's organized into multiple files. There's good tricks in =vanilla-emacs= that will help with the whole thing, I think. An org header can define define what file it's subtree should be tangled into with ~header-properties~

I'd like a config that makes sense when viewed as code, with decent file organization for getting to things quickly. Although automatic tags to the ~use-package~ declarations would be just about as useful.

I'd also like to have this nice text commentary in an org file, because it turns out I really do find that easier to deal with. I need to figure out what's going on with key maps in org, though. Maybe I need =evil-org= which I think is a thing. There's a lot of evil add-ons that I need. But I also don't want to blindly add everything.

** Early Initialization
:PROPERTIES:
header-args: :emacs-lisp :tangle filename.el
:END:


** Initialization

** Configuration

*** General

*** Evil

*** Completion

* Making a modeline
Currently using moody, which is decently supported by modus. I tried out and liked =telephone-line= but didn't stick with it. Mostly I think it was a colors thing, though, which could definitely be fixed. What it _did_ have for colors is a decent-sized section that changes color based on the evil state.

So, what I want is something that combines the two. I think the area to the left of the buffer name tab could have the state and be colorized. That would then need to extend into the background of the angled tab bit, which might be relatively tricky. I think it might also need the path or similar. 

I'm also considering putting that (or some of it?) at the top. What if I just put the moody buffer name at the top, and had more of an uncramped status situation at the bottom.

* YAKS!!
** TODO Key command for pop-mark
** TODO Config org
** TODO Working with bookmarks (and marks)
** TODO Modeline like moody but with left segment colored by state
