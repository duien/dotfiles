#!/usr/bin/env ruby

require 'rack/utils'
input = ARGV[0]

status = {
  code: nil,
  symbol: nil,
  name: nil
}

if input =~ /^\d{3}$/ and input = input.to_i and Rack::Utils::HTTP_STATUS_CODES.key?(input)
  puts "#{input} #{Rack::Utils::HTTP_STATUS_CODES[input]} (:#{Rack::Utils::SYMBOL_TO_STATUS_CODE.invert[input]})"
elsif input.empty?
  puts "Provide a numeric HTTP status code"
elsif (res = input.match(/^(\d)\*\*$/)) and series = res[1].to_i
  codes = Rack::Utils::HTTP_STATUS_CODES.select{ |c,n| c / 100 == series }
  codes.each do |code, name|
    puts "#{code} #{name} (:#{Rack::Utils::SYMBOL_TO_STATUS_CODE.invert[code]})"
  end
else
  puts "Not a valid HTTP status code: #{input}"
end
