'.source.js, .source.coffee':
  '$apply':
    'prefix': '.$'
    'body': '.$apply($0);'
  '$broadcast':
    'prefix': '.$'
    'body': '.$broadcast(\'${1:name}\', ${2:arguments});'
  '$destroy':
    'prefix': '.$'
    'body': '.$destroy();'
  '$digest':
    'prefix': '.$'
    'body': '.$digest();'
  '$emit':
    'prefix': '.$'
    'body': '.$emit(\'${1:name}\', ${2:arguments});'
  '$eval':
    'prefix': '.$'
    'body': '.$eval($0);'
  '$evalAsync':
    'prefix': '.$'
    'body': '.$evalAsync($0);'
  '$new':
    'prefix': '.$'
    'body': '.$new(${1:isolate});'
  '$on':
    'prefix': '.$'
    'body': '.$on(\'${1:name}\', ${2:function(){$3}});'
  '$parent':
    'prefix': '.$'
    'body': '.$parent.'
  '$root':
    'prefix': '.$'
    'body': '.$root.'
  '$watch':
    'prefix': '.$'
    'body': '.$watch(\'${1:name}\', function(scope, newValue, oldValue) {\n\t$0\n});'
  '$http':
    'prefix': 'http'
    'body': '$http(\'${1:GET|POST|PUT|DELETE}\', ${2:url}${3:, ${4:post}}, ${5:function(status, response){\n\t${6:// success}\n}}${7:, function(status, response){\n\t${8:// error}\n}});'
  'copy':
    'prefix': 'copy'
    'body': 'angular.copy(${1:source}${2:, ${3:destination}})'
  'directive':
    'prefix': 'dir'
    'body': 'directive(\'$1\', [${3:\'$4\', }function($4){\n\t${5:// Runs during compile}\n\treturn {\n\t\t// name: \'\',\n\t\t// priority: 1,\n\t\t// terminal: true,\n\t\t// scope: {}, // {} = isolate, true = child, false/undefined = no change\n\t\t// cont­rol­ler: function(\\$scope, \\$element, \\$attrs, \\$transclue) {},\n\t\t// require: \'ngModel\', // Array = multiple requires, ? = optional, ^ = check parent elements\n\t\t// restrict: \'A\', // E = Element, A = Attribute, C = Class, M = Comment\n\t\t// template: \'\',\n\t\t// templateUrl: \'\',\n\t\t// replace: true,\n\t\t// transclude: true,\n\t\t// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),\n\t\tlink: function(\\$scope, iElm, iAttrs, controller) {\n\t\t\t$0\n\t\t}\n\t};\n}]);'
  'element':
    'prefix': 'el'
    'body': 'angular.element(${1:element});'
  'equals':
    'prefix': 'eq'
    'body': 'angular.equals(${1:object1}, ${2:object2});'
  'extend':
    'prefix': 'extend'
    'body': 'angular.extend(${1:destinationObject}, ${2:sourceObject})'
  '$filter':
    'prefix': 'filter'
    'body': '$filter(\'${1:currency|date|filter|json|limitTo|linky|lowercase|number|orderBy|uppercase}\')(${2:array}${3:, ${4:expression}});'
  'forEach':
    'prefix': 'each'
    'body': 'angular.forEach(${1:values}, function(${2:value}, ${3:key}){\n\t$0\n});'
  'isArray':
    'prefix': 'is'
    'body': 'angular.isArray(${1:value})'
  'isDefined':
    'prefix': 'is'
    'body': 'angular.isDefined(${1:value})'
  'isFunction':
    'prefix': 'is'
    'body': 'angular.isFunction(${1:value})'
  'isNumber':
    'prefix': 'is'
    'body': 'angular.isNumber(${1:value})'
  'isObject':
    'prefix': 'is'
    'body': 'angular.isObject(${1:value})'
  'isString':
    'prefix': 'is'
    'body': 'angular.isString(${1:value})'
  'lowercase':
    'prefix': 'lower'
    'body': 'angular.lowercase(${1:string});'
  'module':
    'prefix': 'mod'
    'body': '/**\n * $1 Module\n *\n * ${2:Description}\n */\nangular.module(\'$1\', [$3]).$0'
  'noop':
    'prefix': 'noop'
    'body': 'angular.noop'
  'uppercase':
    'prefix': 'upper'
    'body': 'angular.uppercase(${1:string});'
'.js':
  '$routeProvider.when':
    'prefix': 'route'
    'body': '\\$routeProvider.when(\'$1\', {template: \'$2\', controller: $3});'
'.text.html':
  '|currency':
    'prefix': '|'
    'body': '|currency${1::\'${2:symbol}\'}'
  '|date':
    'prefix': '|'
    'body': '|date${1::\'${2:format}\'}'
  '|filter':
    'prefix': '|'
    'body': '|filter:${1:expression}'
  '|json':
    'prefix': '|'
    'body': '|json'
  '|limitTo':
    'prefix': '|'
    'body': '|limitTo:${1:limit}'
  '|lowercase':
    'prefix': '|'
    'body': '|lowercase'
  '|number':
    'prefix': '|'
    'body': '|number${1:${2:fractionSize}}'
  '|orderBy':
    'prefix': '|'
    'body': '|orderBy:${1:fractionSize}${2::${3:reverse}}'
  '|uppercase':
    'prefix': '|'
    'body': '|uppercase'
'.text.html, .meta.tag':
  'ngRepeat':
    'prefix': 'repeat'
    'body': 'ng-repeat="${1:(${2:key}, ${3:value})} in ${4:dataset}"'
  'ngSwitch':
    'prefix': 'switch'
    'body': 'ng-switch-when="$1"'
  'ngSwitchDefault':
    'prefix': 'default'
    'body': 'ng-switch-default'
  'ngSwitchWhen':
    'prefix': 'when'
    'body': 'ng-switch-when="$0"'
  'ngBindHtmlUnsafe':
    'prefix': 'html'
    'body': 'ng-bind-html-unsafe="$0"'
  'ngBindTemplate':
    'prefix': 'tmpl'
    'body': 'ng-bind-template="$0"'
  'ngChecked':
    'prefix': 'check'
    'body': 'ng-checked="$0"'
  'ngClass':
    'prefix': 'class'
    'body': 'ng-class="$0"'
  'ngClick':
    'prefix': 'click'
    'body': 'ng-click="$0"'
  'ngController':
    'prefix': 'ctrl'
    'body': 'ng-controller="$0"'
  'ngDisabled':
    'prefix': 'disabled'
    'body': 'ng-disabled="{{$0}}"'
  'ngHide':
    'prefix': 'hide'
    'body': 'ng-hide="$0"'
  'ngNonBindable':
    'prefix': 'non'
    'body': 'ng-non-bindable="$0"'
  'ngOptions':
    'prefix': 'options'
    'body': 'ng-options="${1:select} as ${2:label} for ${3:value} in ${4:array}"'
  'ngReadonly':
    'prefix': 'readonly'
    'body': 'ng-readonly="$0"'
  'ngSelected':
    'prefix': 'selected'
    'body': 'ng-selected="$0"'
  'ngShow':
    'prefix': 'show'
    'body': 'ng-show="$0"'
  'ngStyle':
    'prefix': 'style'
    'body': 'ng-style="$0"'
'.text.html:not(.meta.tag)':
  'ngInclude':
    'prefix': 'inc'
    'body': '<ng-include src="$1"${2: scope="$3"}${4: onload="$5"}></ng-include>'
  'ngPluralize':
    'prefix': 'plural'
    'body': '<ng-pluralize count="$1" when="$2"${3: offset="$4"}></ng-pluralize>'
  'ngSwitch':
    'prefix': 'switch'
    'body': '<ng-switch on="$1">$0</ng-switch>'
  'script template':
    'prefix': 'tmpl'
    'body': '<script type="text/ng-template">$0</script>'
  'ngView':
    'prefix': 'view'
    'body': '<ng-view></ng-view>'
